#include <string.h>
#include "s21_sprintf.h"
#include "s21_string.h"

#test sprintf_test_c
char array1 [100];
char array2 [100];
char test1 = 50;
char test2 = 55;
s21_sprintf(array1, "%c", test1 );
sprintf(array2, "%c", test1);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%10c", test2 );
sprintf(array2, "%10c", test2);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%-20c", test2 );
sprintf(array2, "%-20c", test2);
ck_assert_str_eq(array1, array2);

#test sprintf_test_d
char array1 [100];
char array2 [100];
short test1 = 20;
int test2 = 12456;
long test3 = 543256789;
s21_sprintf(array1, "%- .5hd", test1);
sprintf(array2, "%- .5hd", test1);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%5d", test2);
sprintf(array2, "%5d", test2);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%+5d", test2);
sprintf(array2, "%+5d", test2);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%-+10ld", test3);
sprintf(array2, "%-+10ld", test3);
ck_assert_str_eq(array1, array2);

#test sprintf_test_f
char array1 [100];
char array2 [100];
float test1 = 21.21;
double test2 = 21.322;
long double test3 = 21.2121212121;
double test4 = INFINITY;
double test5 = NAN;
s21_sprintf(array1, "%- .15f", test1);
sprintf(array2, "%- .15f", test1);
ck_assert_str_eq(array1,array2);
s21_sprintf(array1, "%-+15lf", test2);
sprintf(array2, "%-+15lf", test2);
ck_assert_str_eq(array1,array2);
s21_sprintf(array1, "%-+15.Lf", test3);
sprintf(array2, "%-+15.Lf", test3);
ck_assert_str_eq(array1,array2);
s21_sprintf(array1, "%+15lf", test2);
sprintf(array2, "%+15lf", test2);
ck_assert_str_eq(array1,array2);
s21_sprintf(array1, "%lf", test4);
sprintf(array2, "%lf", test4);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%lf", test5);
sprintf(array2, "%lf", test5);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%f", test1);
sprintf(array2, "%f", test1);
ck_assert_str_eq(array1, array2);

#test sprintf_test_s
char array1[100];
char array2 [100];
char * test1 = "School 21";
s21_sprintf(array1, "%s", test1);
sprintf(array2, "%s", test1);
ck_assert_str_eq(array1,array2);
s21_sprintf(array1, "%20s", test1);
sprintf(array2, "%20s", test1);
ck_assert_str_eq(array1,array2);

#test sprintf_test_u
char array1 [100];
char array2 [100];
unsigned short test1 = -20;
unsigned int test2 = -1;
unsigned long test3 = -5;
s21_sprintf(array1, "%-.5hu", test1);
sprintf(array2, "%-.5hu", test1);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%5u", test2);
sprintf(array2, "%5u", test2);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%5u", test2);
sprintf(array2, "%5u", test2);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%-10lu", test3);
sprintf(array2, "%-10lu", test3);
ck_assert_str_eq(array1, array2);

#test sprintf_test_percent
char array1[100];
char array2 [100];
int test1 = 21;
double test2 = 21.2121;
s21_sprintf(array1, "%% kek %d", test1);
sprintf(array2, "%% kek %d", test1);
ck_assert_str_eq(array1, array2);
s21_sprintf(array1, "%% kek %lf", test2);
sprintf(array2, "%% kek %lf", test2);
ck_assert_str_eq(array1, array2);
